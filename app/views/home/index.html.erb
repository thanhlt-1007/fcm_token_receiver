<div id="token"></div>
<div id="msg"></div>
<div id="notis"></div>
<div id="err"></div>
<!-- The core Firebase JS SDK is always required and must be listed first -->
<script src="https://www.gstatic.com/firebasejs/8.4.2/firebase-app.js"></script>

<script src="https://www.gstatic.com/firebasejs/7.16.1/firebase-messaging.js"></script>
<script>
  console.log('load success at: ' + new Date());

  MsgElem = document.getElementById('msg');
  TokenElem = document.getElementById('token');
  NotisElem = document.getElementById('notis');
  ErrElem = document.getElementById('err');

  var firebaseConfig = JSON.parse('<%= raw(@firebase_config.to_json) %>');

  firebase.initializeApp(firebaseConfig);

  const messaging = firebase.messaging();
  messaging
    .requestPermission()
    .then(function () {
      console.log('requestPermission success at: ' + new Date());

      MsgElem.innerHTML = 'Notification permission granted.';

      // get the token in the form of promise
      return messaging.getToken();
    })
    .then(function (token) {
      console.log('getToken success at: ' + new Date());

      TokenElem.innerHTML = 'Device token is : <br>' + token;

      // README
      // Unregister service worker to get new token each request

      // OPTION 1
      // get new token each request
      // uncomment

      // OPTION 2
      // test fcm_send.sh
      // comment

      navigator.serviceWorker.getRegistrations().then(function(registrations) {
        for(let registration of registrations) {
          registration.unregister();
        }
      });
    })
    .catch(function (err) {
      ErrElem.innerHTML = ErrElem.innerHTML + '; ' + err;
      console.log('Unable to get permission to notify.', err);
    });

    let enableForegroundNotification = true;
    messaging.onMessage(function (payload) {
      console.log('Message received. ', payload);
      NotisElem.innerHTML =
        NotisElem.innerHTML + JSON.stringify(payload);

      if (enableForegroundNotification) {
        let notification = payload.notification;
        navigator.serviceWorker
          .getRegistrations()
          .then((registration) => {
            registration[0].showNotification(notification.title');
          });
      }
    });
</script>
